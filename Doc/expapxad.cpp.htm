<html><head>
<title>ExpApx: Computing Derivatives with CppAD</title>
<meta name="description" id="description" content="ExpApx: Computing Derivatives with CppAD">
<meta name="keywords" id="keywords" content=" ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_expapxad.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="expapxrev.cpp.htm" target="_top">Prev</a>
</td><td><a href="introduction.cpp.htm" target="_top">Next</a>
</td><td><a href="cppad.htm" target="_top">Top</a>
</td><td>
<select onchange='choose_down2(this)'>
<option>CppAD-&gt;</option>
<option>License</option>
<option>Faq</option>
<option>Install</option>
<option>GetStarted.cpp</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>Introduction-&gt;</option>
<option>ExpApx</option>
<option>ExpApxSeq</option>
<option>ExpApxFor</option>
<option>ExpApxRev</option>
<option>ExpApxAD.cpp</option>
<option>Introduction.cpp</option>
</select>
</td>
<td>ExpApxAD.cpp</td>
<td>Headings</td>
</tr></table><br>
<center><b><big><big>ExpApx: Computing Derivatives with CppAD</big></big></b></center>
.

<code><font color="blue">
<span style='white-space: nowrap'><br>
<br>
#&nbsp;include&nbsp;&lt;cmath&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;for&nbsp;fabs<br>
#&nbsp;include&nbsp;&lt;vector&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;standard&nbsp;vector<br>
#&nbsp;include&nbsp;&lt;CppAD/CppAD.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;http://www.coin-or.org/CppAD/&nbsp;<br>
#&nbsp;include&nbsp;&quot;ExpApx.hpp&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;our&nbsp;example&nbsp;exponential&nbsp;function&nbsp;approximation<br>
bool&nbsp;ExpApxAD(void)<br>
{&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;ok&nbsp;=&nbsp;true;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;CppAD::AD;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;domain&nbsp;space&nbsp;vector<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;n&nbsp;=&nbsp;2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::vector&lt;&nbsp;AD&lt;double&gt;&nbsp;&gt;&nbsp;U(n);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;U[0]&nbsp;=&nbsp;.5;&nbsp;&nbsp;//&nbsp;value&nbsp;of&nbsp;x&nbsp;for&nbsp;this&nbsp;operation&nbsp;sequence<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;U[1]&nbsp;=&nbsp;.2;&nbsp;&nbsp;//&nbsp;value&nbsp;of&nbsp;e&nbsp;for&nbsp;this&nbsp;operation&nbsp;sequence<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;declare&nbsp;independent&nbsp;variables&nbsp;and&nbsp;start&nbsp;tape&nbsp;recording<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::Independent(U);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;evaluate&nbsp;our&nbsp;exponential&nbsp;approximation<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;double&gt;&nbsp;x&nbsp;&nbsp;&nbsp;=&nbsp;U[0];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;double&gt;&nbsp;e&nbsp;&nbsp;&nbsp;=&nbsp;U[1];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;double&gt;&nbsp;apx&nbsp;=&nbsp;ExpApx(x,&nbsp;e);&nbsp;&nbsp;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;range&nbsp;space&nbsp;vector<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;m&nbsp;=&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::vector&lt;&nbsp;AD&lt;double&gt;&nbsp;&gt;&nbsp;V(m);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V[0]&nbsp;=&nbsp;apx;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;create&nbsp;f:&nbsp;U&nbsp;-&gt;&nbsp;V&nbsp;and&nbsp;stop&nbsp;tape&nbsp;recording<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::ADFun&lt;double&gt;&nbsp;f(U,&nbsp;V);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;forward&nbsp;mode&nbsp;sweep&nbsp;that&nbsp;computes&nbsp;partial&nbsp;w.r.t&nbsp;x<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::vector&lt;double&gt;&nbsp;du(n);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::vector&lt;double&gt;&nbsp;dv(m);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;du[0]&nbsp;=&nbsp;1.;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;du[1]&nbsp;=&nbsp;0.;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dv&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;f.Forward(1,&nbsp;du);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;check&nbsp;=&nbsp;1.5;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;partial&nbsp;of&nbsp;ExpApx(x,&nbsp;e)&nbsp;with&nbsp;respect&nbsp;to&nbsp;x<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&nbsp;&nbsp;&amp;=&nbsp;fabs(check&nbsp;-&nbsp;dv[0])&nbsp;&lt;=&nbsp;&nbsp;1e-10;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;reverse&nbsp;mode&nbsp;sweep&nbsp;that&nbsp;derivative<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::vector&lt;double&gt;&nbsp;&nbsp;w(m);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::vector&lt;double&gt;&nbsp;dw(n);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w[0]&nbsp;=&nbsp;1.;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dw&nbsp;&nbsp;&nbsp;=&nbsp;f.Reverse(1,&nbsp;w);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;check&nbsp;=&nbsp;1.5;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;partial&nbsp;of&nbsp;ExpApx(x,&nbsp;e)&nbsp;with&nbsp;respect&nbsp;to&nbsp;x<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&nbsp;&nbsp;&amp;=&nbsp;fabs(check&nbsp;-&nbsp;dw[0])&nbsp;&lt;=&nbsp;&nbsp;1e-10;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;check&nbsp;=&nbsp;0.;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;partial&nbsp;of&nbsp;ExpApx(x,&nbsp;e)&nbsp;with&nbsp;respect&nbsp;to&nbsp;e<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&nbsp;&nbsp;&amp;=&nbsp;fabs(check&nbsp;-&nbsp;dw[1])&nbsp;&lt;=&nbsp;&nbsp;1e-10;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ok;<br>
}<br>
</span>
</font></code>

<hr>Input File: Introduction/ExpApxAD.cpp

</body>
</html>
