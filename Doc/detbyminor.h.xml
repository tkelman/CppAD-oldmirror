<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>Determinant using Expansion by Minors: Source Code</title>
<meta name="description" id="description" content="Determinant using Expansion by Minors: Source Code"/>
<meta name="keywords" id="keywords" content=" Detbyminor determinant minor matrix "/>
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_detbyminor.h_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="detbyminor.cpp.xml" target="_top">Prev</a>
</td><td><a href="detbylu.xml" target="_top">Next</a>
</td><td><a href="cppad.xml" target="_top">Top</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>License</option>
<option>Faq</option>
<option>Install</option>
<option>GetStarted.cpp</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>Example-&gt;</option>
<option>General</option>
<option>ExampleUtility</option>
<option>ListAllExamples</option>
<option>CppADvector</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ExampleUtility-&gt;</option>
<option>Example.cpp</option>
<option>DetOfMinor</option>
<option>DetOfMinor.h</option>
<option>DetByMinor</option>
<option>DetByMinor.h</option>
<option>DetByLu</option>
<option>DetByLu.h</option>
<option>LuVecAD</option>
</select>
</td>
<td>DetByMinor.h</td>
<td>Headings</td>
</tr></table><br/>





<center><b><big><big>Determinant using Expansion by Minors: Source Code</big></big></b></center>
<code><font color="blue"># ifndef CppADDetByMinorIncluded
<code><span style='white-space: nowrap'><br/>
</span></code># define CppADDetByMinorIncluded

<span style='white-space: nowrap'><br/>
<br/>
#&#xA0;include&#xA0;&lt;CppAD/CppAD.h&gt;<br/>
#&#xA0;include&#xA0;&quot;DetOfMinor.h&quot;<br/>
<br/>
//&#xA0;BEGIN&#xA0;CppAD&#xA0;namespace<br/>
namespace&#xA0;CppAD&#xA0;{<br/>
<br/>
template&#xA0;&lt;class&#xA0;Type&gt;<br/>
class&#xA0;DetByMinor&#xA0;{<br/>
public:<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;DetByMinor(size_t&#xA0;m_)&#xA0;:&#xA0;m(m_)&#xA0;,&#xA0;r(m_&#xA0;+&#xA0;1)&#xA0;,&#xA0;c(m_&#xA0;+&#xA0;1)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;i;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;values&#xA0;for&#xA0;r&#xA0;and&#xA0;c&#xA0;that&#xA0;correspond&#xA0;to&#xA0;entire&#xA0;matrix<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(&#xA0;i&#xA0;=&#xA0;0;&#xA0;i&#xA0;&lt;&#xA0;m;&#xA0;i++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;r[i]&#xA0;=&#xA0;i+1;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;c[i]&#xA0;=&#xA0;i+1;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;r[m]&#xA0;=&#xA0;0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;c[m]&#xA0;=&#xA0;0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;inline&#xA0;Type&#xA0;operator()(const&#xA0;CppADvector&lt;Type&gt;&#xA0;&amp;x)&#xA0;const<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;DetOfMinor(x,&#xA0;m,&#xA0;m,&#xA0;r,&#xA0;c);&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
<br/>
private:<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;m;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;mutable&#xA0;because&#xA0;DetOfMinor&#xA0;modifies&#xA0;and&#xA0;restores&#xA0;these&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mutable&#xA0;CppADvector&lt;size_t&gt;&#xA0;r;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mutable&#xA0;CppADvector&lt;size_t&gt;&#xA0;c;<br/>
};<br/>
<br/>
}&#xA0;//&#xA0;END&#xA0;CppAD&#xA0;namespace<br/>
<br/>
</span># endif
</font></code>


<hr/>Input File: Example/DetByMinor.h

</body>
</html>
