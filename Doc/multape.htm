<html><head>
<title>Using Multiple Tapes</title>
<meta name="description" id="description" content="Using Multiple Tapes">
<meta name="keywords" id="keywords" content=" multiple tape derivative calculation ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_multape_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="complexpoly.cpp.htm" target="_top">Prev</a>
</td><td><a href="multape.cpp.htm" target="_top">Next</a>
</td><td><a href="cppad.htm" target="_top">Top</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>License</option>
<option>Faq</option>
<option>Install</option>
<option>GetStarted.cpp</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>Example-&gt;</option>
<option>General</option>
<option>ExampleUtility</option>
<option>ListAllExamples</option>
<option>CppADvector</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>General-&gt;</option>
<option>Interface2C.cpp</option>
<option>JacMinorDet.cpp</option>
<option>JacLuDet.cpp</option>
<option>HesMinorDet.cpp</option>
<option>HesLuDet.cpp</option>
<option>OdeStiff.cpp</option>
<option>OdeTaylor.cpp</option>
<option>ComplexPoly.cpp</option>
<option>MulTape</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>MulTape-&gt;</option>
<option>MulTape.cpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Background</option>
<option>Motivation</option>
<option>General Solution</option>
<option>General Procedure</option>
<option>---..Start ADBaseTape</option>
<option>---..Start ADDBaseTape</option>
<option>---..Inner Function Calculations</option>
<option>---..Derivative of Inner Function</option>
<option>---..Outer Function</option>
<option>---..Derivative of Outer Function</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
<center><b><big><big>Using Multiple Tapes</big></big></b></center>
<br>
<b><big><a name="Background" id="Background">Background</a></big></b>
<br>
If <i>f</i> is an <code><font color="blue"><span style='white-space: nowrap'>ADFun&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code> object,
the vectors returned by 
<a href="forward.htm" target="_top"><span style='white-space: nowrap'>f.Forward</span></a>
,
and
<a href="reverse.htm" target="_top"><span style='white-space: nowrap'>f.Reverse</span></a>
,
have values in the base type (<i>Base</i>) and not
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>.
This reflects the fact that operations used to calculate
these function values are not recorded by the tape corresponding to
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code> operations. 

<br>
<br>
<b><big><a name="Motivation" id="Motivation">Motivation</a></big></b>
<br>
Suppose that you uses derivatives of one or more inner functions
as part of the operations 
needed to compute an outer function.
For example,
the derivatives returned by <code><font color="blue"></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'>.Forward</span></font></code>
might be used as part of 
Taylor's method for solving ordinary
differential equations. 
In addition, we might want to differentiate the
solution of a differential equation with respect to parameters
in the equation.
This can be accomplished in the following way:

<ol type="1"><li>
The operations during the calculations of the function defining the
differential equation could be preformed using the a class of the form
<code><font color="blue"><span style='white-space: nowrap'>&nbsp;AD&lt;&nbsp;AD&lt;double&gt;&nbsp;&gt;</span></font></code>. 

</li><li>

The operations during the calculation of Taylor's method
could be preformed using the <code><font color="blue"><span style='white-space: nowrap'>&nbsp;AD&lt;double&gt;</span></font></code> class.

</li><li>

The results of the solution of the differential equation
could then be preformed using the <code><font color="blue">double</font></code> class.

</li></ol>


<br>
<br>
<b><big><a name="General Solution" id="General Solution">General Solution</a></big></b>
<br>
Provided that we are currently recording
<code><font color="blue"><span style='white-space: nowrap'>&nbsp;AD&lt;double&gt;</span></font></code> operations,
and <i>fin</i> is an <code><font color="blue"><span style='white-space: nowrap'>ADFun&lt;&nbsp;AD&lt;double&gt;&nbsp;&gt;</span></font></code> object,
the operations used to compute the vectors
returned by 
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>fin</span></i><code><font color="blue"><span style='white-space: nowrap'>.Forward</span></font></code>,
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>fin</span></i><code><font color="blue"><span style='white-space: nowrap'>.Rev</span></font></code>,
and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>fin</span></i><code><font color="blue"><span style='white-space: nowrap'>.RevTwo</span></font></code>,
will be recorded on the tape corresponding to
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;double&gt;</span></font></code> operations. 


<br>
<br>
<b><big><a name="General Procedure" id="General Procedure">General Procedure</a></big></b>


<br>
<br>
<b><a name="General Procedure.Start ADBaseTape" id="General Procedure.Start ADBaseTape">Start ADBaseTape</a></b>
<br>
The first step is to declare the independent variables using a
<code><font color="blue"><span style='white-space: nowrap'>CppADvector&lt;double&gt;</span></font></code> argument to the
<a href="independent.htm" target="_top"><span style='white-space: nowrap'>Independent</span></a>
 function.
This will start recording all
operations performed using <code><font color="blue"><span style='white-space: nowrap'>AD&lt;double&gt;</span></font></code> class objects.

<br>
<br>
<b><a name="General Procedure.Start ADDBaseTape" id="General Procedure.Start ADDBaseTape">Start ADDBaseTape</a></b>
<br>
The next step is to declare the independent variables using a
<code><font color="blue"><span style='white-space: nowrap'>CppADvector&lt;&nbsp;AD&lt;&nbsp;AD&lt;double&gt;&nbsp;&gt;&nbsp;&gt;</span></font></code> argument to the
<code><font color="blue">Independent</font></code> function.
This will start recording all
operations performed using <code><font color="blue"><span style='white-space: nowrap'>AD&lt;&nbsp;AD&lt;double&gt;&nbsp;&gt;</span></font></code> class objects.

<br>
<br>
<b><a name="General Procedure.Inner Function Calculations" id="General Procedure.Inner Function Calculations">Inner Function Calculations</a></b>
<br>
The next step is to calculation
the inner functions 
using <code><font color="blue"><span style='white-space: nowrap'>AD&lt;&nbsp;AD&lt;double&gt;&nbsp;&gt;</span></font></code> class objects.

<br>
<br>
<b><a name="General Procedure.Derivative of Inner Function" id="General Procedure.Derivative of Inner Function">Derivative of Inner Function</a></b>
<br>
The next step is to create the 
<code><font color="blue"><span style='white-space: nowrap'>ADFun&lt;&nbsp;AD&lt;double&gt;&nbsp;&gt;</span></font></code> function object <i>fin</i>.
This will also stop the recording of
operations performed using <code><font color="blue"><span style='white-space: nowrap'>AD&lt;&nbsp;AD&lt;double&gt;&nbsp;&gt;</span></font></code> class objects.
The <i>fin</i> object can then be used to calculate
the derivatives needed to compute the outer function.

<br>
<br>
<b><a name="General Procedure.Outer Function" id="General Procedure.Outer Function">Outer Function</a></b>
<br>
The next step is to compute the 
outer function
using <code><font color="blue"><span style='white-space: nowrap'>AD&lt;double&gt;</span></font></code> class objects.

<br>
<br>
<b><a name="General Procedure.Derivative of Outer Function" id="General Procedure.Derivative of Outer Function">Derivative of Outer Function</a></b>
<br>
The next step is to create the 
<code><font color="blue"><span style='white-space: nowrap'>ADFun&lt;double&gt;</span></font></code> function object <i>fout</i>.
This will also stop the recording of
operations performed using <code><font color="blue"><span style='white-space: nowrap'>AD&lt;double&gt;</span></font></code> class objects.
The <i>fout</i> object can then be used to calculate
the derivatives of the outer function.




<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file
<a href="multape.cpp.htm" target="_top"><span style='white-space: nowrap'>MulTape.cpp</span></a>

contains an example and a test of this procedure.   
It returns true if it succeeds and false otherwise.
The file <a href="odetaylor.cpp.htm" target="_top"><span style='white-space: nowrap'>OdeTaylor.cpp</span></a>
 is a more complex example
use of multiple tapes.


<hr>Input File: omh/MulTape.omh

</body>
</html>
