<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>An Example Exponential Approximation Source Code</title>
<meta name="description" id="description" content="An Example Exponential Approximation Source Code"/>
<meta name="keywords" id="keywords" content=" "/>
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_expapx.hpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="expapx.xml" target="_top">Prev</a>
</td><td><a href="expapx.cpp.xml" target="_top">Next</a>
</td><td><a href="cppad.xml" target="_top">Top</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>License</option>
<option>Faq</option>
<option>Install</option>
<option>GetStarted.cpp</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>Introduction-&gt;</option>
<option>ExpApx</option>
<option>ExpApxSeq</option>
<option>ExpApxFor</option>
<option>ExpApxRev</option>
<option>ExpApxAD.cpp</option>
<option>Introduction.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ExpApx-&gt;</option>
<option>ExpApx.hpp</option>
<option>ExpApx.cpp</option>
</select>
</td>
<td>ExpApx.hpp</td>
<td>Headings</td>
</tr></table><br/>



<center><b><big><big>An Example Exponential Approximation Source Code</big></big></b></center>
<code><font color="blue">
<span style='white-space: nowrap'><br/>
template&#xA0;&lt;class&#xA0;Type&gt;<br/>
Type&#xA0;ExpApx(const&#xA0;Type&#xA0;&amp;x,&#xA0;const&#xA0;Type&#xA0;&amp;e)<br/>
{&#xA0;&#xA0;&#xA0;&#xA0;Type&#xA0;a,&#xA0;q,&#xA0;r,&#xA0;s,&#xA0;k;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;declare&#xA0;local&#xA0;variables<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;r&#xA0;=&#xA0;s&#xA0;=&#xA0;k&#xA0;=&#xA0;Type(1);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;initialize&#xA0;as&#xA0;equal&#xA0;to&#xA0;one<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;a&#xA0;=&#xA0;x;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;a&#xA0;=&#xA0;|x|<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;if(&#xA0;Type(0)&#xA0;&gt;&#xA0;x&#xA0;)&#xA0;a&#xA0;=&#xA0;-x;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;while&#xA0;the&#xA0;previous&#xA0;term&#xA0;included&#xA0;in&#xA0;the&#xA0;summation&#xA0;is&#xA0;greater&#xA0;than&#xA0;e<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;while(r&#xA0;&gt;&#xA0;e)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;q&#xA0;&#xA0;=&#xA0;a&#xA0;*&#xA0;r;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;q&#xA0;=&#xA0;|x|^k&#xA0;/&#xA0;(k-1)!<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;r&#xA0;&#xA0;=&#xA0;q&#xA0;/&#xA0;k;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;r&#xA0;=&#xA0;|x|^k&#xA0;/&#xA0;k!<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;s&#xA0;&#xA0;=&#xA0;s&#xA0;+&#xA0;r;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;s&#xA0;=&#xA0;1&#xA0;+&#xA0;|x|&#xA0;/&#xA0;1!&#xA0;+&#xA0;...&#xA0;+&#xA0;|x|^k&#xA0;/&#xA0;k!<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;k&#xA0;&#xA0;=&#xA0;k&#xA0;+&#xA0;Type(1);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;In&#xA0;the&#xA0;case&#xA0;where&#xA0;x&#xA0;is&#xA0;negative,&#xA0;use&#xA0;exp(x)&#xA0;=&#xA0;1&#xA0;/&#xA0;exp(-|x|)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;if(&#xA0;Type(0)&#xA0;&gt;&#xA0;x&#xA0;)&#xA0;s&#xA0;=&#xA0;Type(1)&#xA0;/&#xA0;s;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;s;<br/>
}<br/>
</span>
</font></code>

<hr/>Input File: Introduction/ExpApx.hpp

</body>
</html>
