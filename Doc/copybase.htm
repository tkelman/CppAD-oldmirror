<html><head>
<title>AD From Base Type Constructor</title>
<meta name="description" id="description" content="AD From Base Type Constructor">
<meta name="keywords" id="keywords" content=" construct Ad from Base ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_copybase_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="default.cpp.htm" target="_top">Prev</a>
</td><td><a href="copybase.cpp.htm" target="_top">Next</a>
</td><td><a href="cppad.htm" target="_top">Top</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>License</option>
<option>Faq</option>
<option>Install</option>
<option>GetStarted.cpp</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>AD-&gt;</option>
<option>Constructor</option>
<option>Convert</option>
<option>Eq</option>
<option>ADValued</option>
<option>BoolValued</option>
<option>VecAD</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>Constructor-&gt;</option>
<option>Default</option>
<option>CopyBase</option>
<option>CopyAD</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>CopyBase-&gt;</option>
<option>CopyBase.cpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>b</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
<center><b><big><big>AD From Base Type Constructor</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>b</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code>
<code><span style='white-space: nowrap'><br>
</span></code><code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font></code><i><span style='white-space: nowrap'>b</span></i>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
Constructs an <code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code> object from an object of
type <i>Base</i>. 
Directly after this construction, the object <i>x</i> is
a <a href="glossary.htm#Parameter" target="_top"><span style='white-space: nowrap'>parameter</span></a>
.

<br>
<br>
<b><big><a name="b" id="b">b</a></big></b>
<br>
The argument <i>b</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font></code><i><span style='white-space: nowrap'>Type</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>b</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>where <i>Type</i> is <i>Base</i>,
or is any is any type that can be converted to <i>Base</i>;
i.e., any type for which the syntax 
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>b</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>is valid.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>

<br>
The file
<a href="copybase.cpp.htm" target="_top"><span style='white-space: nowrap'>CopyBase.cpp</span></a>

contains an example and test of this operation.
It returns true if it succeeds and false otherwise.


<hr>Input File: CppAD/local/CopyBase.h

</body>
</html>
