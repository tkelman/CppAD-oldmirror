<html><head>
<title>AD Standard Math Unary Functions</title>
<meta name="description" id="description" content="AD Standard Math Unary Functions">
<meta name="keywords" id="keywords" content=" standard Ad math unary acos asin atan cos cosh exp log log10 sin sinh sqrt tan ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_stdmathunary_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="diveq.cpp.htm" target="_top">Prev</a>
</td><td><a href="acos.cpp.htm" target="_top">Next</a>
</td><td><a href="cppad.htm" target="_top">Top</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>License</option>
<option>Faq</option>
<option>Install</option>
<option>GetStarted.cpp</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>AD-&gt;</option>
<option>Constructor</option>
<option>Convert</option>
<option>Eq</option>
<option>ADValued</option>
<option>BoolValued</option>
<option>VecAD</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ADValued-&gt;</option>
<option>Arithmetic</option>
<option>StdMathUnary</option>
<option>MathOther</option>
<option>CondExp</option>
<option>Discrete</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>StdMathUnary-&gt;</option>
<option>Acos.cpp</option>
<option>Asin.cpp</option>
<option>Atan.cpp</option>
<option>Cos.cpp</option>
<option>Cosh.cpp</option>
<option>Exp.cpp</option>
<option>Log.cpp</option>
<option>Log10.cpp</option>
<option>Sin.cpp</option>
<option>Sinh.cpp</option>
<option>Sqrt.cpp</option>
<option>Tan.cpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>x</option>
<option>y</option>
<option>Operation Sequence</option>
<option>fun</option>
<option>Examples</option>
<option>Derivatives</option>
<option>---..acos</option>
<option>---..asin</option>
<option>---..atan</option>
<option>---..cos</option>
<option>---..cosh</option>
<option>---..exp</option>
<option>---..log</option>
<option>---..log10</option>
<option>---..sin</option>
<option>---..sinh</option>
<option>---..sqrt</option>
<option>---..tan</option>
</select>
</td>
</tr></table><br>
<center><b><big><big>AD Standard Math Unary Functions</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>y</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font></code><i><span style='white-space: nowrap'>fun</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
Evaluates the one argument standard math function 
<i>fun</i> where its argument is an 
<a href="glossary.htm#AD of Base" target="_top"><span style='white-space: nowrap'>AD&nbsp;of</span></a>
 <i>Base</i> object.

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
The argument <i>x</i> has one of the following prototypes
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;VecAD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;::reference&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code><br>
<b><big><a name="y" id="y">y</a></big></b>
<br>
The result <i>y</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;</span></font></code><i><span style='white-space: nowrap'>y</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code><br>
<b><big><a name="Operation Sequence" id="Operation Sequence">Operation Sequence</a></big></b>
<br>
Most of these functions are AD of <i>Base</i>
<a href="glossary.htm#Operation.Atomic" target="_top"><span style='white-space: nowrap'>atomic&nbsp;operations</span></a>
.
In all cases,
The AD of <i>Base</i>
operation sequence used to calculate <i>y</i> is 
<a href="glossary.htm#Operation.Independent" target="_top"><span style='white-space: nowrap'>independent</span></a>

of <i>x</i>.

<br>
<br>
<b><big><a name="fun" id="fun">fun</a></big></b>
<br>
A definition of <i>fun</i> for each of the argument types
list below is included in the <code><font color="blue">CppAD</font></code> namespace
(the corresponding result has the same type as the argument).
These definitions extend to the 
<a href="glossary.htm#AD Type Sequence" target="_top"><span style='white-space: nowrap'>AD&nbsp;type&nbsp;sequence</span></a>

above each of the types list below.

<table><tr><td align='left'  valign='top'>

<b>fun</b>   
	</td><td align='left'  valign='top'>
 <b>Meaning</b>
	</td><td align='left'  valign='top'>
 <code><font color="blue">float</font></code> 
	</td><td align='left'  valign='top'>
 <code><font color="blue">double</font></code>
	</td><td align='left'  valign='top'>
 <code><font color="blue">std::complex&lt;float&gt;</font></code> 
	</td><td align='left'  valign='top'>
 <code><font color="blue">std::complex&lt;double&gt;</font></code>
</td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">acos</font></code>  
	</td><td align='left'  valign='top'>
 inverse cosine function
	</td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 no  </td><td align='left'  valign='top'>
 no  </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">asin</font></code>  
	</td><td align='left'  valign='top'>
 inverse cosine function
	</td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 no  </td><td align='left'  valign='top'>
 no  </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">atan</font></code>  
	</td><td align='left'  valign='top'>
 inverse tangent function
	</td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 no  </td><td align='left'  valign='top'>
 no  </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">cos</font></code>   
	</td><td align='left'  valign='top'>
 trigonometric cosine function
	</td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">cosh</font></code>  
	</td><td align='left'  valign='top'>
 hyperbolic cosine function
	</td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">exp</font></code>   
	</td><td align='left'  valign='top'>
 exponential function
	</td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">log</font></code>   
	</td><td align='left'  valign='top'>
 logarithm function
	</td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">log10</font></code> 
	</td><td align='left'  valign='top'>
 log base 10 function
	</td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">sin</font></code>   
	</td><td align='left'  valign='top'>
 trigonometric sine function
	</td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">sinh</font></code>  
	</td><td align='left'  valign='top'>
 hyperbolic sine function
	</td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">sqrt</font></code>  
	</td><td align='left'  valign='top'>
 square root function
	</td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">tan</font></code>  
	</td><td align='left'  valign='top'>
 square root function
	</td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td><td align='left'  valign='top'>
 yes </td></tr><tr><td align='left'  valign='top'>

</td></tr>
</table>
<br>
<b><big><a name="Examples" id="Examples">Examples</a></big></b>
<br>
The following files
contain examples and tests of these functions.   
Each test returns true if it succeeds and false otherwise.

<table><tr><td align='left'  valign='top'>

<a href="acos.cpp.htm" target="_top">Acos.cpp</a></td><td>
The AD acos Function: Example and Test</td></tr>
<tr><td>

<a href="asin.cpp.htm" target="_top">Asin.cpp</a></td><td>
The AD asin Function: Example and Test</td></tr>
<tr><td>

<a href="atan.cpp.htm" target="_top">Atan.cpp</a></td><td>
The AD atan Function: Example and Test</td></tr>
<tr><td>

<a href="cos.cpp.htm" target="_top">Cos.cpp</a></td><td>
The AD cos Function: Example and Test</td></tr>
<tr><td>

<a href="cosh.cpp.htm" target="_top">Cosh.cpp</a></td><td>
The AD cosh Function: Example and Test</td></tr>
<tr><td>

<a href="exp.cpp.htm" target="_top">Exp.cpp</a></td><td>
The AD exp Function: Example and Test</td></tr>
<tr><td>

<a href="log.cpp.htm" target="_top">Log.cpp</a></td><td>
The AD log Function: Example and Test</td></tr>
<tr><td>

<a href="log10.cpp.htm" target="_top">Log10.cpp</a></td><td>
The AD log10 Function: Example and Test</td></tr>
<tr><td>

<a href="sin.cpp.htm" target="_top">Sin.cpp</a></td><td>
The AD sin Function: Example and Test</td></tr>
<tr><td>

<a href="sinh.cpp.htm" target="_top">Sinh.cpp</a></td><td>
The AD sinh Function: Example and Test</td></tr>
<tr><td>

<a href="sqrt.cpp.htm" target="_top">Sqrt.cpp</a></td><td>
The AD sqrt Function: Example and Test</td></tr>
<tr><td>

<a href="tan.cpp.htm" target="_top">Tan.cpp</a></td><td>
The AD tan Function: Example and Test</td></tr>
<tr><td>

</td></tr>
</table>
<br>
<b><big><a name="Derivatives" id="Derivatives">Derivatives</a></big></b>
<br>
Each of these functions satisfy a standard math function differential equation.
Calculating derivatives using this differential equation 
is discussed for 
both <a href="forwardtheory.htm#Standard Math Functions" target="_top"><span style='white-space: nowrap'>forward</span></a>

and <a href="reversetheory.htm#Standard Math Functions" target="_top"><span style='white-space: nowrap'>reverse</span></a>
 mode.
The exact form of the differential equation
for each of these functions is listed below:

<br>
<br>
<b><a name="Derivatives.acos" id="Derivatives.acos">acos</a></b>

<br>
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{lcr}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;{\rm&nbsp;acos}&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;-&nbsp;(1&nbsp;-&nbsp;x&nbsp;*&nbsp;x)^{-1/2}<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="Derivatives.asin" id="Derivatives.asin">asin</a></b>

<br>
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{lcr}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;{\rm&nbsp;asin}&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;(1&nbsp;-&nbsp;x&nbsp;*&nbsp;x)^{-1/2}<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="Derivatives.atan" id="Derivatives.atan">atan</a></b>

<br>
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{lcr}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;{\rm&nbsp;atan}&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\frac{1}{1&nbsp;+&nbsp;x^2}<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="Derivatives.cos" id="Derivatives.cos">cos</a></b>

<br>
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{lcr}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;\cos&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;-&nbsp;\sin&nbsp;(x)&nbsp;&nbsp;\\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;\sin&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\cos&nbsp;(x)<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="Derivatives.cosh" id="Derivatives.cosh">cosh</a></b>

<br>
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{lcr}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;\cosh&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\sinh&nbsp;(x)&nbsp;&nbsp;\\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;\sin&nbsp;(x)&nbsp;]}{x}&nbsp;&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\cosh&nbsp;(x)<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="Derivatives.exp" id="Derivatives.exp">exp</a></b>

<br>
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{lcr}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;\exp&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\exp&nbsp;(x)<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="Derivatives.log" id="Derivatives.log">log</a></b>

<br>
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{lcr}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;\log&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\frac{1}{x}<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="Derivatives.log10" id="Derivatives.log10">log10</a></b>
<br>
This function is special in that it's derivatives are calculated
using the relation
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{lcr}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\rm&nbsp;log10}&nbsp;(x)&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\log(x)&nbsp;/&nbsp;\log(10)<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="Derivatives.sin" id="Derivatives.sin">sin</a></b>

<br>
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{lcr}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;\sin&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\cos&nbsp;(x)&nbsp;\\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;\cos&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;-&nbsp;\sin&nbsp;(x)&nbsp;<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="Derivatives.sinh" id="Derivatives.sinh">sinh</a></b>

<br>
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{lcr}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;\sinh&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\cosh&nbsp;(x)&nbsp;&nbsp;&nbsp;\\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;\cosh&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\sinh&nbsp;(x)<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="Derivatives.sqrt" id="Derivatives.sqrt">sqrt</a></b>

<br>
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{lcr}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{[&nbsp;{\rm&nbsp;sqrt}&nbsp;(x)&nbsp;]}{x}&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\frac{1}{2&nbsp;{\rm&nbsp;sqrt}&nbsp;(x)&nbsp;}<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="Derivatives.tan" id="Derivatives.tan">tan</a></b>
<br>
This function is special in that it's derivatives are calculated
using the relation
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{lcr}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\tan&nbsp;(x)&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\sin(x)&nbsp;/&nbsp;\cos(x)<br>
\end{array}<br>
\]&nbsp;</span></code>



<hr>Input File: CppAD/local/StdMathUnary.h

</body>
</html>
