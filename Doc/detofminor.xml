<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>Compute the Determinant of a Minor</title>
<meta name="description" id="description" content="Compute the Determinant of a Minor"/>
<meta name="keywords" id="keywords" content=" Detofminor determinant minor matrix "/>
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_detofminor_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="example.cpp.xml" target="_top">Prev</a>
</td><td><a href="detofminor.cpp.xml" target="_top">Next</a>
</td><td><a href="cppad.xml" target="_top">Top</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>License</option>
<option>Faq</option>
<option>Install</option>
<option>GetStarted.cpp</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>Example-&gt;</option>
<option>General</option>
<option>ExampleUtility</option>
<option>ListAllExamples</option>
<option>CppADvector</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ExampleUtility-&gt;</option>
<option>Example.cpp</option>
<option>DetOfMinor</option>
<option>DetOfMinor.h</option>
<option>DetByMinor</option>
<option>DetByMinor.h</option>
<option>DetByLu</option>
<option>DetByLu.h</option>
<option>LuVecAD</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>DetOfMinor-&gt;</option>
<option>DetOfMinor.cpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Inclusion</option>
<option>Description</option>
<option>A</option>
<option>m</option>
<option>n</option>
<option>r</option>
<option>c</option>
<option>Example</option>
<option>Source Code</option>
</select>
</td>
</tr></table><br/>
<center><b><big><big>Compute the Determinant of a Minor</big></big></b></center>
<table><tr><td align='left'  valign='top'>
<b>Syntax</b>
</td><td align='left'  valign='top'>
 <code><font color="blue"><span style='white-space: nowrap'>#&#xA0;include&#xA0;&quot;Example/DetOfMinor.h&quot;</span></font></code> 
</td></tr><tr><td align='left'  valign='top'>

</td><td align='left'  valign='top'>
 <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Type</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;DetOfMinor(&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;CppADvector&lt;</span></font></code><i><span style='white-space: nowrap'>Type</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>A</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font></code><i><span style='white-space: nowrap'>m</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font></code><i><span style='white-space: nowrap'>n</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CppADvector&lt;size_t&gt;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>r</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CppADvector&lt;size_t&gt;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>c</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> 
</td></tr>
</table>
<br/>
<b><big><a name="Inclusion" id="Inclusion">Inclusion</a></big></b>
<br/>
The template function <code><font color="blue">DetOfMinor</font></code> is defined in the <code><font color="blue">CppAD</font></code>
namespace by including 
the file <code><font color="blue">Example/DetOfMinor.h</font></code>.
It is only intended for example and testing purposes, 
so it is not automatically included by
<a href="cppad.xml" target="_top"><span style='white-space: nowrap'>CppAD.h</span></a>
.

<br/>
<br/>
<b><big><a name="Description" id="Description">Description</a></big></b>
<br/>
This template function
returns the determinant of a minor of the matrix <i>A</i>
using expansion by minors.
The minor <i>M</i> of the matrix <i>A</i> is defined by
<code><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<i>M</i>(<i>i</i>,&#xA0;<i>j</i>)&#xA0;=&#xA0;<i>A</i>(&#xA0;<i>R</i>(<i>i</i>),&#xA0;<i>C</i>(<i>j</i>)&#xA0;)<br/>
</span></code>where  the functions <code><span style='white-space: nowrap'><i>R</i>(<i>i</i>)</span></code> and <code><span style='white-space: nowrap'><i>C</i>(<i>j</i>)</span></code> are defined below.
Expansion by minors is chosen as an example because it uses
a lot of floating point operations yet does not require much source code
(on the order of <i>m</i> factorial floating point operations and 
about 75 lines of source code).
This is not an efficient method for computing a determinant;
for example, using an LU factorization would be better.

<br/>
<br/>
<b><big><a name="A" id="A">A</a></big></b>
<br/>
The <i>Type</i> vector defines 
an <i>m</i> by <i>m</i> matrix by
<code><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<i>A</i>(<i>i</i>,&#xA0;<i>j</i>)&#xA0;=&#xA0;<i>A</i>[&#xA0;<i>i</i>&#xA0;+&#xA0;<i>j</i>&#xA0;*&#xA0;<i>m</i>]<br/>
</span></code><br/>
<b><big><a name="m" id="m">m</a></big></b>
<br/>
The size of the original matrix <i>A</i>.

<br/>
<br/>
<b><big><a name="n" id="n">n</a></big></b>
<br/>
The size of the minor <i>M</i>
(must be less than or equal <i>m</i>).

<br/>
<br/>
<b><big><a name="r" id="r">r</a></big></b>
<br/>
This vector of length <code><span style='white-space: nowrap'><i>m</i>+1</span></code> is a linked list that
defines the row indices of <i>A</i>
that are included in the minor.
To be specific, we define the function <code><span style='white-space: nowrap'><i>R</i>(<i>i</i>)</span></code> 
for <code><span style='white-space: nowrap'><i>i</i>=0,&#xA0;...&#xA0;,&#xA0;<i>n</i>-1</span></code> as follows:
<code><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<i>R</i>(0)&#xA0;&#xA0;&#xA0;=&#xA0;<i>r</i>[<i>m</i>]<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<i>R</i>(<i>i</i>+1)&#xA0;=&#xA0;&#xA0;<i>r</i>[&#xA0;<i>R</i>(<i>i</i>)&#xA0;]<br/>
</span></code>The <i>i</i>-th row of the minor is a sub-vector of row index
<code><span style='white-space: nowrap'><i>R</i>(<i>i</i>)</span></code> in <i>A</i>.
(All the elements of <i>r</i> must be less than <i>m</i>.)
The vector <i>r</i> is modified during the computation, but it is restored
to its original value before the return.

<br/>
<br/>
<b><big><a name="c" id="c">c</a></big></b>
<br/>
This vector of length <code><span style='white-space: nowrap'><i>m</i>+1</span></code> is a linked list that
defines the column indices of <i>A</i>
that are included in the minor.
To be specific, we define the function <code><span style='white-space: nowrap'><i>C</i>(<i>i</i>)</span></code> 
for <code><span style='white-space: nowrap'><i>i</i>=0,&#xA0;...&#xA0;,&#xA0;<i>n</i>-1</span></code> as follows:
<code><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<i>C</i>(0)&#xA0;&#xA0;&#xA0;=&#xA0;<i>c</i>[<i>m</i>]<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<i>C</i>(<i>j</i>+1)&#xA0;=&#xA0;&#xA0;<i>c</i>[&#xA0;<i>C</i>(<i>j</i>)&#xA0;]<br/>
</span></code>The <i>j</i>-th column of the minor is a sub-vector of column index
<code><span style='white-space: nowrap'><i>C</i>(<i>j</i>)</span></code> in <i>A</i>.
(All the elements of <i>c</i> must be less than <i>m</i>.)
The vector <i>c</i> is modified during the computation, but it is restored
to its original value before the return.



<br/>
<br/>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br/>
The file
<a href="detofminor.cpp.xml" target="_top"><span style='white-space: nowrap'>DetOfMinor.cpp</span></a>
 
contains an example and a test of <code><font color="blue">DetOfMinor.h</font></code>.
It returns true if it succeeds and false otherwise.

<br/>
<br/>
<b><big><a name="Source Code" id="Source Code">Source Code</a></big></b>
<br/>
The file
<a href="detofminor.h.xml" target="_top"><span style='white-space: nowrap'>DetOfMinor.h</span></a>
 
contains the source for this template function.



<hr/>Input File: Example/DetOfMinor.h

</body>
</html>
