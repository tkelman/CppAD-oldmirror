/* -----------------------------------------------------------------------
CppAD: C++ Algorithm Differentiation: Copyright (C) 2003-06 Bradley M. Bell

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
------------------------------------------------------------------------ */

$begin WhatsNew06$$
$spell
	valgrind memcheck
	Kasper Kristensen
	taylor
	BAvector
	fy
	uninitialized
	Tautschnig
	resize
	gcc
	var
	const
	dw
	VecADelem
	atan
	namespace
	Cygwin
	messaging
	usr
	aclocal
	automake
	autoconf
	user
	underquoted
	Hes
	Jac
	CppAD
	sed
	gprof
	Mul.h
	Div.h
$$

$section Changes and Additions to CppAD$$

$children%
	omh/WhatsNew05.omh%
	omh/WhatsNew04.omh%
	omh/WhatsNew03.omh
%$$

$head Introduction$$
This section contains a list of the changes to CppAD during 2005
(in reverse order by date).
Changes and additions to CppAD during previous years can be found in
$table
$tref WhatsNew03$$ $rnext
$tref WhatsNew04$$ $rnext
$tref WhatsNew05$$ 
$tend
The purpose of these sections is to
assist you in learning about changes between various versions of CppAD.

$head 08-17$$
Some error message occurred while executing
$codep
	valgrind --tool=memcheck Example/Example
	valgrind --tool=memcheck TestMore/TestMore

$$
These were not really bugs, but they have been fixed to avoid
this conflict between CppAD and $href%http://valgrind.org/%valgrind%$$.

$head 07-14$$
Make some improvements were made to the $cref/Introduction/$$, 
$cref/ExpApx.hpp/$$ and $cref/ExpApxRev/$$ sections.


$head 07-12$$
Use a drop down menu for the navigation links, instead of a separate frame
for the navigation links, for each section in the documentation.

$head 06-29$$
Newer versions of the gcc compiler generated an error because 
$xref/erf/$$ was using $xref/CondExp/$$ before it was defined.
This was found by Kasper Kristensen and his fix has been
included in the CppAD distribution.

$head 06-22$$
The $xref/ADFun/$$ operation
$syntax%%f%(%x%, %y%)%$$ no longer executes a zero order
$xref/Forward/$$ operation when a new operation sequence is stored in 
$italic f$$.
In addition, the syntax for this operation was changed to
$syntax%%f%.Dependent(%y%)%$$ (see $xref/Dependent/$$).

$comment ----------------------------------------------------------- $$
$head 06-19$$
The changes listed under 06-17 and 06-18 were made in the branches/ADFun branch 
of the CppAD subversion repository. They did not get merged into the trunk
and become part of the distribution until 06-19. This accomplished the 
following goal, which was removed from the $xref/WishList/$$:
$pre

$$
"We would like to be able to erase the function
values so that $xref/ADFun/$$ objects use less memory. 
We may even want to erase the AD operation sequence so that
$xref/ADFun/$$ objects use even less memory and can be used 
for a subsequent AD operation sequence."

$subhead 06-17$$
Added $xref/capacity_taylor/$$ which can be used to control
the amount of memory used to store $xref/Forward/$$ results.
Also $xref/FunDeprecated//deprecated/$$ $code taylor_size$$, and defined 
$xref/size_taylor/$$ in its place.

$subhead 06-18$$
Added the $xref/FunConstruct//ADFun default constructor/$$
and the ability to
$xref/Dependent//store a new operation sequence/$$ 
in an $code ADFun$$ object with out having to use 
$code ADFun$$ pointers together with $code new$$
and $code delete$$.

$comment ----------------------------------------------------------- $$

$head 06-17$$
The location where the distribution files are stored has changed
and this broke the Download Current Version links for the
$xref/InstallUnix/Download Current Version/Unix/$$ and 
$xref/InstallWindows/Download Current Version/Windows/$$ installation.
This has been fixed.
$pre

$$
The compiling instructions for the $xref/Speed/$$ routines have been improved.
$pre

$$
The $xref/Value/$$ function has been extended to allow for 
$xref/glossary/Parameter/parameter/$$ arguments even if the corresponding
$xref/glossary/Tape State/tape state/$$ for is Recording.
$pre

$$
The $xref/BenderQuad/$$ documentation and example have been improved
by changing $italic Vector$$ to $italic BAvector$$ to emphasize that
it corresponds to a vector of $italic Base$$ objects.


$head 06-15$$
Change $xref/BenderQuad/$$ to use $syntax%%Base%$$ instead of 
$syntax%AD<%Base%>%$$ where every possible.
This allows for more calculations to be done in the base type; i.e.,
is more efficient.

$head 06-09$$
Add a size check (size one) for the 
$xref/BenderQuad/g/function value argument, g/$$ in $code BenderQuad$$.

$head 06-07$$
Some major changes were made to the notation in
$xref/GetStarted.cpp/$$ (to make it easier to start using CppAD).
$pre

$$
In the $xref/Introduction/$$ example,
$latex ExpApx$$ was changed to $latex {\rm ExpApx}$$.

$head 06-05$$
Change $xref/BenderQuad/$$ 
$latex F_y (x, y)$$ to $latex H(x,y)$$ so applies in a more
general setting.
This was another change to the $code BenderQuad$$ interface,
$syntax%%fun%.fy%$$ was changed to $syntax%%fun%.h%$$.

$head 06-02$$
Newer versions of the gcc compiler generated a warning for possible
use of an uninitialized pointer.
This was found by Michael Tautschnig and his fix has been
included in the CppAD distribution.


$head 05-31$$
The interface to $xref/BenderQuad/$$ has been changed.
Now all the function evaluation routines 
are member functions of one class object.
This makes it easy for them to share common data.

$head 05-29$$
Change statement of command syntax to 
be in the same browser frame as the command documentation
(for all the commands with a syntax statement). 
Now when a user links to a specific heading in
a command's documentation,
the syntax for that command is automatically included.
Before the user needed to 
follow another link to see to the command syntax.

$head 05-27$$
Added $xref/BenderQuad/$$ for computing the Hessian of 
Bender's reduced objective function.
$pre

$$
Added special specifications for $code resize(0)$$
to $xref/CppAD_vector/$$.

$head 05-03$$
The g++ (GCC) 4.1.0 (Red Hat 4.1.0-3) compiler reported an error
because certain functions were used before being defined
(version 3.4.4 did not complain about this).
This has been fixed.

$head 04-29$$
Change all of the example and test driver programs so that they return
error codes; i.e., zero for no error and one for an error.
$pre

$$
Add more discussion and a reference for the 
$xref/Bugs/gcc 3.4.4 -O2/gcc 3.4.4 -O2/$$ bug.

$head 04-28$$
Improve the $xref/GetStarted.cpp/$$ example and move
it so that it is visible at the too level of the documentation.

$head 04-26$$
The programs in $xref/Introduction/$$ have been converted to automated
test that return true or false with the driver program 
$xref/Introduction.cpp/$$.

$head 04-25$$
Add an $xref/Introduction/$$ section to the documentation
(replaces old example that was part of the $xref/Theory/$$ section).

$head 04-19$$
A discussion was added near the end of the $xref/FunCheck/$$ documentation.
And the cross references to the $xref/CompareChange/$$ discussion
were changed to the FunCheck discussion.
$pre

$$
An operation sequence entry was added to the $xref/WishList/$$.

$head 04-18$$
The new definitions for 
$xref/glossary/AD of Base/AD of Base/$$
and
$xref/glossary/Operation/Sequence/operation sequence/1/$$
have been used throughout the documentation.
$pre

$$
Add the $xref/FunCheck/$$ section for checking that a sequence of
operations is as intended. 


$head 04-17$$
The documentation for $xref/SpeedTest/$$ and $xref/Poly/$$ was improved.
$pre

$$
Definitions were added for an atomic $xref/glossary/Operation/operation/$$
and for an operation sequence being
dependent and independent of the values of specific operands.
$pre

$$
The definition of AD sequence of operations was made abstract
and moved to the glossary as
$xref/glossary/Operation/Sequence/Type operation sequence/1/$$.

$head 04-15$$
The $xref/MulTape/$$ example was moved from $xref/ADFun/$$ to $xref/General/$$.
The documentation for $xref/SpeedTest/$$ was improved.

$head 04-14$$
Documentation and examples were improved for the following routines:
$xref/ForTwo/$$,
$xref/RevTwo/$$.
In addition, the computation in $code RevTwo$$ was made more efficient
(it used to possibly calculate some first order partials that were not used).

$head 04-13$$
Documentation and examples were improved for the following routines:
$xref/Jacobian/$$,
$xref/ForOne/$$, 
$xref/RevOne/$$,
and $xref/Hessian/$$.


$head 04-08$$
In the case where $xref/SeqProperty/use_VecAD/use_VecAD/$$ is true,
the $xref/ForSparseJac/$$ calculation in only for the current
independent variable values.
In this case, the sparsity pattern can be (and has been) 
made more efficient; i.e., fewer true values 
(because it only applies to the current $xref/ForwardZero/$$).
$pre

$$
The conversion from 
$xref/VecAD/VecAD<Base>::reference/VecAD<Base>::reference/$$
to $xref/AD/$$ gave a compile error (this has been fixed).
Code example for this fix
$codep
	VecAD<double> V(1);
	AD<double> zero = 0;
	V[zero] = 1.;
	static_cast< AD<double> > ( V[zero] );
$$





$head 04-06$$
The $xref/ForSparseJac/$$, $xref/RevSparseJac/$$, $xref/RevSparseHes/$$
sparsity results are now valid for 
all independent variable values
(if the AD operation sequence does no use any 
$syntax%VecAD<%Base%>%$$ operands).
In addition, the 
$code ForSparseJac$$, $xref/RevSparseJac/$$ and $xref/RevSparseHes/$$
documentation and examples were improved.
$pre

$$
The $xref/SeqProperty/use_VecAD/useVecAD/$$ 
member function was added to $xref/ADFun/$$ objects.
$pre

$$
The $code var_size$$ member function was changed to 
$xref/SeqProperty/size_var/size_var/$$ 
(this is not backward compatible, but $code var_size$$ was just added on 
$xref/WhatsNew06/04-03/04-03/$$).


$head 04-05$$
The documentation and example for $xref/CompareChange/$$ were
improved and moved to be part of the $xref/Forward/$$ section.

$head 04-04$$
The documentation and examples for $xref/Reverse/$$ were 
improved and split into $xref/ReverseOne/$$ and $xref/ReverseAny/$$.

$head 04-03$$
Create separate sections for the 
$xref/ForwardZero//zero/$$ and $xref/ForwardOne/$$ first order case
of $xref/Forward/$$ mode.
$pre

$$
The ADFun $xref/FunDeprecated/Size/Size/$$ member function
has been deprecated (use $xref/size_taylor/$$ instead).
$pre

$$
The $xref/Reverse/$$ member function is now declared,
and documented as, $code const$$; i.e.,
it does not effect the state of the ADFun object.
$pre

$$
Change the examples that use $xref/Reverse/$$ to use the same
return value notation as the documentation; i.e., $code dw$$.

$head 04-02$$
The member functions of $xref/ADFun/$$ that return properties of
AD of $italic Base$$
$xref/glossary/Operation/Sequence/operation sequence/1/$$
have been grouped into the $xref/SeqProperty/$$ section.
In addition, the $xref/SeqProperty.cpp/$$ example has been added.
$pre

$$
The $xref/CompareChange/$$ function documentation was improved
and moved to a separate section.
$pre

$$
Group the documentation for the $xref/ADFun/$$ member functions that
$xref/FunEval//evaluate functions and derivative values/$$.
$pre

$$
Remove the old $code Fun.cpp$$ example and extend
$xref/Independent.cpp/$$ so that it demonstrates using different
choices for the $xref/SimpleVector/$$ type.

$head 04-01$$
Move the $xref/FunConstruct//ADFun Constructor/$$ to its own separate 
section, improve its documentation, and use $xref/Independent.cpp/$$ 
for its example.
$pre

$$
The following member functions of $xref/ADFun/$$ have been 
$xref/FunDeprecated//deprecated/$$:
$code Order$$, $code Memory$$.
$pre

$$
The wish list entry for Memory usage
was updated on 04-01. 
The request was implemented on $xref/WhatsNew06/06-19/06-19/$$
and the entry was removed from the wish list.

$head 03-31$$
Add examples for the $xref/ParVar//Parameter, Variable/$$ and
$xref/Independent/$$ functions.
$pre

$$
Move the $xref/ParVar//Parameter and Variable/$$ functions from
the $xref/ADFun/$$ section to the $xref/AD/$$ section.
$pre

$$
In the examples for the $xref/AD/$$ sections,
refer to the range space vector instead of the dependent variable vector
because some of the components may not be 
$xref/glossary/Variable/variables/$$.

$head 03-30$$
Move the $xref/LuRatio/$$ section below $xref/LuDetAndSolve/$$. 
$pre

$$
Move the definition of an 
AD of $italic Base$$
$xref/glossary/Operation/Sequence/operation sequence/1/$$ 
from the glossary to the $xref/AD/$$ section.
$pre

$$
Improve the definition of
$xref/glossary/Tape State/tape state/$$.
$pre

$$
Add mention of taping to 
$xref/Erf/$$, $xref/BoolFun/$$, $xref/NearEqualExt/$$,and $xref/Pow/$$.
$pre

$$
Change the definition for
$xref/VecAD/VecAD<Base>::reference/VecAD<Base>::reference/$$
so that it stands out of the text better.


$head 03-29$$
Mention the $xref/VecAD/VecAD<Base>::reference/VecAD<Base>::reference/$$ case in 
documentation and examples for
$xref/abs/$$, $xref/atan2/$$, $xref/erf/$$, and $xref/pow/$$.
$pre

$$
Fix a bug derivative computation for $syntax%abs(%x%)%$$
when $italic x$$ had type $syntax%AD< AD<double> >%$$ and $italic x$$
had value zero.
$pre

$$
Fix a bug using non-zero AD indices for $xref/VecAD/$$ vectors
while the tape is in the 
$xref/glossary/Tape State/Empty/empty state/1/$$.
$pre

$$
Extend $xref/erf/$$ to include $code float$$, $code double$$,
and $syntax%VecAD<%Base%>::reference%$$.

$head 03-28$$
Mention the $xref/VecAD/VecAD<Base>::reference/VecAD<Base>::reference/$$ case in 
documentation and examples for
$xref/UnaryPlus/$$,
$xref/UnaryMinus/$$,
$xref/Sub/$$,
$xref/Mul/$$,
$xref/Div/$$,
$xref/AddEq/$$,
$xref/SubEq/$$,
$xref/MulEq/$$,
$xref/DivEq/$$, and 
$xref/StdMathUnary/$$


$head 03-27$$
Extend and improve the 
$xref/VecAD/VecAD<Base>::reference/Exceptions/VecAD exceptions/1/$$.
$pre

$$
Mention the $xref/VecAD/VecAD<Base>::reference/VecAD<Base>::reference/$$ case 
and generally improve 
$xref/Add/$$ documentation and examples.


$head 03-26$$
Improve documentation and examples for $xref/VecAD/$$ and change
its element type from 
$syntax%VecADelem<%Base%>%$$ to $syntax%VecAD_reference<%Base%>%$$  
(so that it looks more like
$xref/VecAD/VecAD<Base>::reference/VecAD<Base>::reference/$$).
$pre

$$
Mention the $xref/VecAD/VecAD<Base>::reference/VecAD<Base>::reference/$$ case 
and generally improve 
$xref/Value/$$, $xref/Output/$$ and $xref/Eq/$$ documentation
and examples.
$pre

$$
Extend $xref/Integer/$$ and $xref/PrintFor/$$ to include the
$xref/VecAD/VecAD<Base>::reference/VecAD<Base>::reference/$$ case
(and mention in documentation and examples).


$head 03-24$$
Move $xref/VecAD/$$ and $xref/LuRatio/$$ from the old ExtendDomain section
to $xref/AD/$$.

$head 03-23$$
Improve documentation and examples for
$xref/CondExp/$$ and $xref/Discrete/$$.
Move both of these sections from ExtendDomain to $xref/ADValued/$$.

$head 03-22$$
The documentation sections under $xref/AD/$$ 
have been organized into a new set of sub-groups.

$head 03-18$$
The documentation and example for $xref/PrintFor/$$ have been improved.
The sections below $xref/AD/$$ 
in the documentation have been organized into subgroups.

$head 03-17$$
The documentation and examples have been improved for the 
following functions:
$xref/BoolFun/$$, and
$xref/NearEqualExt/$$.

$head 03-16$$
Improve the documentation and example for the $xref/pow/$$ function.
This includes splitting out and generalizing the integer case 
$xref/PowInt/$$.
$pre

$$
The copies of the $code atan2$$ function were included
in the CppAD namespace for the 
$xref/Atan2/Base/Base types/$$ 
$code float$$ and $code double$$.

$head 03-15$$
Improve the 
$xref/CppAD/Introduction/introduction/$$ to CppAD.

$head 03-11$$
The file $code CppAD/local/MathOther.h$$ had a file name case error 
that prevented the documentation from building and tests from running 
(except under Cygwin which is not really case sensitive).
This has been fixed.
$pre

$$
The term AD of $italic Base$$
$xref/glossary/Operation/Sequence/operation sequence/1/$$
has been defined. 
It will be used to improve the user's understanding of exactly
how an $xref/ADFun/$$ object is related to the C++ algorithm.


$head 03-10$$
The math functions that are not under $xref/StdMathUnary/$$ have
been grouped under $xref/MathOther/$$.
$pre

$$
The documentation and examples have been improved for the 
following functions:
$xref/abs/$$, $xref/atan2/$$.

$head 03-09$$
The examples 
$xref/Cos.cpp/$$, 
$xref/Cosh.cpp/$$, 
$xref/Exp.cpp/$$, 
$xref/Log.cpp/$$, 
$xref/Log10.cpp/$$,
$xref/Sin.cpp/$$,
$xref/Sinh.cpp/$$,
$xref/Sqrt.cpp/$$
have been improved.

$head 03-07$$
The $code tan$$ function has been added to CppAD.
$pre

$$
The examples $xref/Acos.cpp/$$, $xref/Asin.cpp/$$ and 
$xref/Atan.cpp/$$ have been improved.

$head 03-05$$
The AD standard math unary functions documentation
has been grouped together with improved documentation
in $xref/StdMathUnary/$$.

$head 02-28$$
The $xref/Output/$$ and $xref/Abs/$$
documentation and example have been improved. 
Minor improvements were also made to the $xref/LuVecAD/$$ documentation.

$head 02-25$$
The $xref/Compare/$$ documentation and example have been improved. 

$head 02-24$$
The documentation and examples have been improved for the following sections:
$xref/Div/$$, $xref/SubEq/$$, $xref/MulEq/$$, and $xref/DivEq/$$. 

$head 02-23$$
The $xref/Mul/$$ documentation and example have been improved. 

$head 02-21$$
The $xref/Sub/$$ documentation and example have been improved. 
$pre

$$
There was a bug $xref/RevTwo/$$ that was not detected by the
$xref/RevTwo.cpp/$$ test. This bug was reported by
$href%
	http://list.coin-or.org/pipermail/cppad/2006-February/000020.html%
	Kasper Kristensen
%$$
A test was added $code TestMore/RevTwo.cpp$$ that detects this problem
and the problem has been fixed.


$head 02-15$$
The $xref/AddEq/$$ documentation and example have been improved. 

$head 02-14$$
The $xref/Add/$$ documentation and example have been improved. 


$head 02-13$$
Combine the old binary operator and computed assignment documentation
into $xref/Arithmetic/$$ documentation.
$pre

$$
The documentation and examples have been improved for the following sections:
$xref/Eq/$$, $xref/UnaryPlus/$$, $xref UnaryMinus$$.

$head 02-11$$
The documentation and examples have been improved for the following sections:
$xref/Default/$$, $xref/CopyBase/$$, $xref/CopyAD/$$, and
$xref/Value/$$.

$head 02-10$$
This is the beginning of a pass to improve the documentation: 
The documentation sections 
The $xref/CopyBase/$$ (formerly FromBase) and 
$xref/CopyAD/$$ (formerly Copy) documentation has been modified.
$pre

$$
Some of the error messaging during $xref/ADFun/$$ construction
has been improved.

$head 02-04$$
There was a read memory access past the end of an array in
$xref/CppAD_vector/push_back/CppAD::vector::push_back/$$.
This has been fixed and in addition
$xref/TrackNewDel/$$ is now used to do and check the allocation in 
$code CppAD::vector$$.
$pre

$$
The routines $xref/Runge45/$$ and $xref/Rosen34/$$
had static vectors to avoid recalculation on each call.
These have been changed to be plain vectors to avoid memory
leak detection by $xref/TrackNewDel/TrackCount/TrackCount/$$.

$head 01-20$$
Add 
$xref/WishList/Software Guidelines/software guidelines/$$
to the wish list.

$head 01-18$$
Improve the definition for 
$xref/glossary/Parameter/parameters/$$ and
$xref/glossary/Variable/variables/$$.
Remove unnecessary reference to parameter and variable
in  documentation for $xref/Independent/$$.

$head 01-08$$
$index aclocal$$
The aclocal program is part of the automake and autoconf system.
It often generates warnings of the form:
$syntax%
	/usr/share/aclocal/%...%: warning: underquoted definition of
	%...%
%$$
The shell script file $code FixAclocal$$,
which attempts to fix these warnings,
was added to the distribution.

$head 01-07$$
Change CppAD error handler from using the macros defined in
$code CppAD/CppADError.h$$ to using a class defined in 
$xref%ErrorHandler%%CppAD/ErrorHandler.h%$$.
The macros $code CppADUnknownError$$ and $code CppADUsageError$$
have been depreciated (they are temporarily still available in the 
file $code CppAD/local/CppADError.h$$).

$head 01-02$$
Add the sed script $code Speed/gprof.sed$$ to aid in the display of the
$xref/InstallUnix/--with-profiling/--with-profiling/$$ output.
$pre

$$
Make the following source code files easier to understand:
$code Add.h$$, $code Sub.h$$, $code Mul.h$$, $code Div.h$$
(in the directory $code CppAD/local$$).

$head 01-05$$
Make the following source code files easier to understand:
$code RevSparseHes.h$$,
$code Reverse.h$$,
$code Fun.h$$,
$code Forward.h$$,
$code ForSparseJac.h$$,
$code RevSparseJac.h$$
(in the directory $code CppAD/local$$).


$end
