/* -----------------------------------------------------------------------
CppAD: C++ Algorithm Differentiation: Copyright (C) 2003-06 Bradley M. Bell

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
------------------------------------------------------------------------ */

$begin library$$
$spell
	CppAD
	namespace
$$

$index numerical, C++ template library$$
$index template, numerical C++ library$$
$index C++, numerical template library$$
$index library, numerical C++ template$$

$section The CppAD General Purpose Library$$

$children%
	CppAD/ErrorHandler.h%

	CppAD/NearEqual.h%
	CppAD/SpeedTest.h%

	omh/NumericType.omh%
	CppAD/CheckNumericType.h%
	omh/SimpleVector.omh%
	CppAD/CheckSimpleVector.h%

	CppAD/PowInt.h%
	CppAD/Poly.h%
	omh/LuDetAndSolve.omh%
	CppAD/RombergOne.h%
	CppAD/RombergMul.h%
	CppAD/Runge45.h%
	CppAD/Rosen34.h%
	CppAD/OdeErrControl.h%
	CppAD/OdeGear.h%
	CppAD/OdeGearControl.h%

	CppAD/local/BenderQuad.h%
	CppAD/local/LuRatio.h%

	CppAD/CppAD_vector.h%
	CppAD/TrackNewDel.h
%$$

$head Error Handler$$
All of the routines in the CppAD namespace use the following 
general purpose error handler:
$table
$rref ErrorHandler$$
$tend

$head Some Testing Utilities$$
The routines listed below are general purpose numerical testing routines:
$table
$rref NearEqual$$
$rref SpeedTest$$
$tend

$head C++ Concepts$$
$index concept, C++$$
We refer to a the set of classes that satisfy certain conditions
as a C++ concept.
The following concepts are used by the CppAD Template library:
$table
$rref NumericType$$
$rref CheckNumericType$$
$rref SimpleVector$$
$rref CheckSimpleVector$$
$tend


$head CppAD Numerical Template Library$$
The routines listed below are general purpose numerical routines
written with the floating point type A C++ template parameter.
This enables them to be used with algorithmic differentiation types,
as well as for other purposes. 
$table
$rref PowInt$$
$rref Poly$$
$rref LuDetAndSolve$$
$rref RombergOne$$
$rref RombergMul$$
$rref Runge45$$
$rref Rosen34$$
$rref OdeErrControl$$
$rref OdeGear$$
$rref OdeGearControl$$
$tend

$head Numerical AD Library$$
The routines listed below are numerical routines that are specially
designed to work with CppAD in particular.
$table
$rref BenderQuad$$
$rref LuRatio$$
$tend

$head CppAD Support Template Library$$
The classes listed are used to support CppAD calculations:
$table
$rref CppAD_vector$$
$rref TrackNewDel$$
$tend

$end
