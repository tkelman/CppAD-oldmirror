/* -----------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-06 Bradley M. Bell

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
------------------------------------------------------------------------ */
/*
$begin Introduction$$
$spell
	Griewank
	Andreas
$$


$index Theory$$
$section Theory of Algorithmic Differentiation$$

$head Motivation$$
This chapter presents an introduction
to the theory of Algorithmic Differentiation.
We begin with a simple floating point algorithm
that approximates the exponential function.
We then write out an
operation sequence corresponding to this algorithm.
This is followed by forward and reverse
mode calculations of the derivative of the function corresponding
to the operation sequence.
A more complete treatment of the theory of AD can be found in 
Andreas Griewank's book
$xref/Bib/Evaluating Derivatives/Evaluating Derivatives/$$.

$head Sections$$
$children%
	Introduction/ExpApxExample.h%
	Introduction/ExpSeqExample.cpp%
	Introduction/ExpForExample.cpp%
	Introduction/ExpRevExample.cpp
%$$
$table
$tref ExpApxExample$$ $rnext
$tref ExpSeqExample$$      $rnext
$tref ExpForExample$$       $rnext
$tref ExpRevExample$$ 
$tend
	

$end
*/
