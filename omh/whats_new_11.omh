$Id$
/* --------------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-11 Bradley M. Bell

CppAD is distributed under multiple licenses. This distribution is under
the terms of the 
                    Common Public License Version 1.0.

A copy of this license is included in the COPYING file of this distribution.
Please visit http://www.coin-or.org/CppAD/ for information on other licenses.
-------------------------------------------------------------------------- */

$begin whats_new_11$$
$spell
	abs_geq
	CondExpRel
	num
	Taylor
	Tanh
	Rosen
	Runge
	executables
	matlab
	Addr
	sizeof
	undefine
	config
	adolc
	initializer
	vec
	Bool
	op
	omp_alloc
	isnan
	gcc
	hasnan
	instantiation
	Microsoft
	svn
	hes
	openmp
	prefixdir
	pkgconfig
	Fadbad
	Wshadow
	omh
	dir
	libspeed
	cppad_ipopt_nlp.hpp
	automake
	makefile
	builddir
	gpl
	http://www.coin-or.org/download/source/CppAD/cppad-20110101.0.cpl.tgz
$$

$section Changes and Additions to CppAD During 2011$$

$head Introduction$$
This section contains a list of the changes to CppAD during 2011
(in reverse order by date).
The purpose of this section is to
assist you in learning about changes between various versions of CppAD.

$head branches/base_require$$
The $icode Base$$ type $cref/requirements/base_require/$$ need to be changed
to fix an 
$href%
	http://list.coin-or.org/pipermail/cppad/2011q3/000210.html%
	optimize bug
%$$.
These changes were done in the svn branch $code branches/base_require$$.

$subhead 08-09$$
$list number$$
$cref/Warning:/base_require/Warning/$$
Add $cref/epsilon/base_require/epsilon/$$ to the
$icode Base$$ type requirements.
$lnext
Extend $cref/epsilon/$$ to AD types.
$lend

$subhead 08-08$$
$list number$$
Improve the $cref/base_require/$$ documentation for
$cref/standard math functions/base_std_math/$$.
$lnext 
$cref/Warning:/base_require/Warning/$$
Add $code abs_geq$$ to the $cref/requirements/base_require/$$
for a user defined $icode Base$$ type. 
$lnext
Check that zero order forward mode results are approximately equal,
instead of exactly equal,
after an $cref optimize$$ operation.
This fixes a bug in the optimize correctness check
(The  order of operations can be changed by $code optimize$$
and hence the zero order forward mode results may not be exactly the same.)
$lend

$subhead 08-07$$
Improve the $cref/base_require/$$ documentation for 
$cref/EqualOpSeq/base_identical/EqualOpSeq/$$,
$cref/Identical/base_identical/Identical/$$ 
$cref/Integer/base_require/Integer/$$, and 
$cref/Ordered/base_ordered/$$
operations.

$subhead 08-06$$
Add the $cref/CondExpRel/base_cond_exp/CondExpRel/$$ paragraph to the 
base requirements documentation. 
This was missing and are required for
$cref/CondExp/$$ to work with $codei%AD<%Base%>%$$ arguments
and a non-standard $icode Base$$ type.

$subhead 08-04$$
$list number$$
$cref/Warning:/base_require/Warning/$$
Change the $cref/include/base_require/Include Order/$$ file name to
$cref/base_require.hpp/base_require/$$.
$lnext
Use $cref base_float.hpp$$ and $cref base_double.hpp$$ as additional examples
in the $code/CondExp/base_require/CondExp/$$ $icode Base$$ requirements.
$lend

$head 08-03$$
Change $cref/PrintFor/$$ condition from less than or equal zero 
to not greater than zero;i.e., not positive.
This makes $code nan$$ print because it results in false for all comparisons.

$head 08-02$$
$list number$$
Change $cref/PrintFor/$$ so it no longer aborts execution when
there is no operation sequence being recording; see
$cref/start recording/Independent/Start Recording/$$.
$lnext
Improve the $cref print_for.cpp$$ example.
$lend

$head 07-31$$
Add a conditional version of the $cref/PrintFor/$$ command
$codei%
	PrintFor(%text%, %y%, %z%)
%$$
which only prints when $icode%z% <= 0%$$.
This is useful for error reporting during forward mode; i.e.,
reporting when the argument to the $code log$$ function is not valid.

$head 07-29$$
$list number$$
The routines $cref/set_max_num_threads/max_num_threads/$$ and 
$code get_max_num_threads$$ were created.
User's will need to replace calls to 
$cref/max_num_threads/old_max_num_threads/$$ 
by calls to $code set_max_num_threads$$.
$lnext
The functions $cref efficient$$ was deprecated because it 
has not been shown to be useful.
$lend

$head 07-28$$
$list number$$
Change $cref return_memory$$ so that if $cref max_num_threads$$ is one
(the default), $cref omp_alloc$$ does not hold onto memory
(keep it available for the corresponding thread).
$lnext
Add files that were missing from the Microsoft Visual Studio
$cref/examples/InstallWindows/Examples and Testing/$$ and
$cref/more testing/InstallWindows/More Correctness Testing/$$
project files.
$lnext
Fix some warnings generated by Microsoft Visual Studio 2010 build.
$lend

$head 07-27$$
Make $code tan$$ and $code tanh$$ $cref/atomic/glossary/Operation/Atomic/$$
operations; see $cref tan_forward$$ and $cref tan_reverse$$.

$head 07-25$$
Finish the $cref/user_atomic/$$ example $cref user_tan.cpp$$.
This is also a design and implementation of the routines necessary
to make $code tan$$ and $code tanh$$ CppAD atomic operations.

$head 07-18$$
The reverse mode formulas for $latex Z(t)$$ need to involve 
the lower order Taylor coefficients for $latex Y(t)$$.
This has been fixed in $cref tan_reverse$$.

$head 07-17$$
$list number$$
Fix bug in $cref/user_atomic/$$ functions.
To be specific, the Taylor coefficients for $latex y$$,
of order less than $icode k$$,
were not passed into the $code user_atomic$$ 
$cref/forward/user_atomic/forward/$$ callback function.
$lnext
Derive the theory for including the tangent and hyperbolic tangent
as CppAD atomic operations $cref/tan_forward/$$ and $cref/tan_reverse/$$; 
see the wish list item $code Tan and Tanh$$.
$lnext
Implement and test forward mode calculation of derivative for
the tangent and hyperbolic tangent functions; 
see the new $cref/user_atomic/$$ example $cref/user_tan.cpp/$$.
$lend

$head 07-14$$
$list number$$
The $cref/InstallUnix/$$ instructions for running the individual
correctness and speed tests were out of date. 
This has been fixed; see 
$cref/example and tests/InstallUnix/make/Examples and Tests/$$.
$lnext
Move $cref/parallel_ad.cpp/$$ from $code example$$ directory
to $code openmp$$ directory (and convert it from a function to a program).
$lnext
Simplify $cref/example_a11c.cpp/$$ by making it just a correctness test.
$lnext
Change $cref/openmp_run.sh/$$ so that it runs correctness tests with
the compiler debugging flags.
$lend

$head 07-13$$
$list number$$
static hash code data that was begin used by multiple threads
when recording $codei%AD<%Base%>%$$ operations 
$cref/in_parallel/$$ execution mode. This has been fixed.
$lnext
Make the $cref/sparsity/Sparse/$$ calculations safe
for use during $cref/in_parallel/$$ execution mode.
$lnext
Add the $cref/parallel_ad.cpp/$$ example.
$lnext
Change $cref/example_a11c.cpp/$$ example so that is just a correctness
(not speed) test.
$lend

$head 07-11$$
$list number$$
Change the upper limit for 
$cref/max_num_threads/$$ from 32 to 48.
$lnext
Add $cref/OpenMP/omp_parallel/$$ documentation for,
$cref/nan/nan/OpenMP/$$,
$cref/Rosen34/Rosen34/OpenMP/$$, and
$cref/Runge45/Runge45/OpenMP/$$.
$lnext
Fix $cref CheckNumericType$$ and $cref CheckSimpleVector$$
so they work properly when used $cref/in_parallel/$$ execution mode.
$lend


$subhead openmp/run.sh$$
The following changes were made to $code openmp/run.sh$$:
$list number$$
$lnext
Change the 
$cref/maximum number of threads/openmp_run.sh/Maximum Number of Threads/$$
instead of specifying the entire set of values to be tested.
$lnext
Change settings for 
$cref/multi_newton/openmp_run.sh/multi_newton/$$
so that $code n_gird$$ is a multiple of the maximum number of threads.
$lnext
Report dynamic number of thread
results as a separate result in the summary output line.
$lnext
Fix automatic removal of executables from $code openmp$$ directory
(was commented out).
$lnext
The documentation for $code openmp/run.sh$$ was moved to the
$cref/omp_parallel/$$ section.
$lend
 

$head 07-10$$
$list number$$
Add link to $tref Discrete$$ in $cref/omp_parallel/$$.
$lnext
Make use of the $cref/TrackNewDel/$$ routines
$cref/in_parallel/$$ execution mode an error (it never worked properly); 
see $cref/TrackNewDel OpenMP/TrackNewDel/OpenMP/$$.
$lnext
Change $cref/memory_leak/$$ so that it checks for a leak in all threads.
This is what $cref/multi_newton.cpp/$$ and $cref/sum_i_inv.cpp/$$
assumed was being done.
$lend

$head 07-09$$
All the OpenMP parallel execution requirements
have been grouped in the section $cref/omp_parallel/$$.

$head 07-07$$
Add the routine $cref/parallel_ad/$$ to fix bug when using
$codei%AD<%Base%>%$$ in $cref/parallel/in_parallel/$$ execution mode.

$head 06-23$$
$list number$$
Fix a bug whereby the assert
$codei%
	Error detected by false result for
		! omp_in_parallel()
	at line %n% in the file
	%prefix%/include/cppad/omp_alloc.hpp
%$$
sometimes occurred.
$lnext
The routine $cref/omp_max_thread/$$ was deprecated, 
use the routine $cref/max_num_threads/$$ instead.
$lnext
The deprecated routines have been grouped together in the
$cref/deprecated/$$ section of the CppAD manual.
$lend

$head 06-21$$
$list number$$
The $code openmp/run.sh$$ routine was changed to use zero,
instead of $code automatic$$, for automatic choice of
$cref/number of repeats/openmp_run.sh/Number of Repeats/$$,
and 
$cref/maximum number of threads/openmp_run.sh/Maximum Number of Threads/$$.

$lnext
The output of each of the OpenMP examples / speed tests
(run by $code openmp/run.sh$$) 
was changed to be valid matlab / octave assignment statements.

$lnext
In the case where OpenMP is enabled during compilation,
a summary for the different number of threads as added at the end of
the $code openmp/run.sh$$ output.

$lend

$head 06-18$$
$list number$$
The $cref/TapeAddrType/InstallUnix/TapeAddrType/$$ option was added
to the $cref/configure/InstallUnix/Configure/$$ command line.
$lnext
The function $cref/size_op_seq/seq_property/size_op_seq/$$ results uses
$code sizeof(CppAD_TAPE_ADDR_TYPE)$$ 
where it used to use $code sizeof(size_t)$$.
$lnext
Remove $code cppad/config.h$$ from CppAD distribution,
(put the information in $code cppad/configure.hpp$$.)
This removes the need to undefine symbols that were
defined by $code cppad/config.h$$ and that did not begin with $code CPPAD_$$.
$lnext
Change $cref/adolc/InstallUnix/AdolcDir/$$ library linkage so it
works with version $code ADOL-C-2.2.0$$.
$lend

$head 05-29$$
Fix bug (introduced on $cref/05-22/whats_new_11/05-22/$$)
whereby constructor might not be called (but required) when the
$cref/base type/base_require/$$ is not plain old data.

$head 05-28$$
$list number$$
Add the $cref/efficient/$$ routine to the $cref/omp_alloc/$$ system.
$lnext
Improve the $code omp_alloc$$ tracing so it prints the same pointer
as returned to the user (not an offset version of that pointer).
$lend

$head 05-26$$
Fix Visual Studio project files that were broken during the change on 05-22. 
In addition, in the file $code cppad/omp_alloc.hpp$$,
suppress the following Microsoft Visual Studio warning
$codep
	warning C4345: behavior change: an object of POD type constructed with 
	an initializer of the form () will be default-initialized
$$


$head 05-22$$
$list number$$
The old memory tracking routines $cref/TrackNewDel/$$ have been deprecated.
Their use should be replaced using the $cref/omp_alloc/$$
a memory allocator which is designed to work well in a multi-threading OpenMP 
environment; see $cref/purpose/omp_alloc/Purpose/$$.
$lnext
The replacement of $code TrackNewDel$$ by $code omp_alloc$$
has been throughout the CppAD source code, including the examples
that used $code TrackNewDel$$; namely,
$cref/mul_level_adolc.cpp/$$, $cref/ode_taylor_adolc.cpp/$$.
$lnext
The CppAD vector template class
and the $cref/vectorBool/CppAD_vector/vectorBool/$$ class
were modified to use the $code omp_alloc$$
$cref/memory/CppAD_vector/Memory/$$ manager.
This should improves its speed of memory allocation
$cref/in_parallel/$$ sections of a program.
$lnext
The $cref/speed_test/$$ argument
$cref/size_vec/speed_test/size_vec/$$ call was by value,
instead of by reference (as documented).
This has been fixed and the call is now by reference.
$lnext
The $cref/capacity/CppAD_vector/capacity/$$ function has been added
to the CppAD vector class.
$lnext
The simple vector 
$cref/
	element constructor and destructor/
	SimpleVector/
	Element Constructor and Destructor
/$$
description has been changed to explicitly specify that the
default constructor is used to initialize elements of the array.
$lnext
The $cref/size_op_seq/seq_property/size_op_seq/$$ documentation
has been improved to mention that the allocated memory may be larger.
$lend

$head 05-11$$
$list number$$
Avoid ambiguity in the definition of the 
$cref/complex isnan/base_complex.hpp/isnan/$$ function.
$lnext
Errors during $code make test$$ were not 
being detected.
This has been fixed.
$lend

$head 05-03$$
$list number$$
If $code NDEBUG$$ is not defined,
the $cref/hasnan/nan/$$ function is used to make sure that the 
results of any $cref/Forward/$$ operation does not contain a 
nan (not a number).
If so, an error message is generated and the program terminates.
This error message and termination can be caught; see $cref/ErrorHandler/$$.

$lnext
In the event that the 
$cref cppad_ipopt_nlp$$ objective function, the constraints,
or their derivatives are infinite, 
an error message is generated and the program terminates
(proved that $code NDEBUG$$ is not defined and the default error 
handler has not been replaced).
$lend

$head 04-29$$
$list number$$
The Microsoft Visual Studio 2003 project files 
for the $cref/InstallWindows/$$ examples and tests no longer worked because
the current version of CppAD uses local types in template instantiation; see
$href%
	http://msdn.microsoft.com/en-us/library/bh44f2cb(v=vs.71).aspx%
	Compiler Error C2918
%$$.
These project files were converted to Visual Studio 2008 where they do work
(if you use a later version, Visual Studio should automatically
convert them for you).

$lnext
The old speed test directory was moved to $code speed_cppad$$
before the new $cref speed$$ test organization was created on 2006-12-11
(revision 715 of the repository).
The old speed tests have not been used for years and so have been deleted.
$lend

$head 04-20$$
The $cref/openmp run.sh/openmp_run.sh/$$ script what changed
to take an argument that specifies which tests is run
(it no longer runs all the tests).
Also improve the openmp test program output formatting.

$head 04-19$$
The $icode use_ad$$ option was added to the 
$cref/multi_newton.cpp/$$ test case.

$head 03-19$$
The subversion write protected directory 
$code bin/.svn$$ was mistakenly part of the
$cref/Unix Tar File/InstallUnix/Download/Unix Tar Files/$$ distribution.
It has been removed.

$head 03-11$$
The vector of sets argument 
$cref/r/user_atomic/rev_hes_sparse/r/$$
to the $code user_atomic$$ function $icode rev_hes_sparse$$
must have size greater than or equal to $icode n$$.
There was a check that its size was greater than or equal $icode q$$.
This was incorrect and has been fixed.

$head 03-05$$
Add the $cref/conjugate gradient/conj_grad.cpp/$$ example.

$head 02-22$$
Add the $cref/atomic/speed_main/option_list/atomic/$$ option to the 
speed test program and use 
$cref/mat_mul.hpp/$$ during the
$cref cppad_mat_mul.cpp$$ speed test when the atomic option is specified.


$head 02-19$$
There was a bug when $cref/omp_max_thread/$$ was set to one,
and $code NDEBUG$$ was not defined,
the thread corresponding to parameters was one, but the only valid thread
number was zero (only one thread) 
and an CPPAD stopped with an assertion error.
This has been fixed.

$head 02-17$$
There was a mistake in $code openmp/run.sh$$ where it attempted
to remove a non-existent file in the case where 
$cref/openmp_flag/openmp_run.sh/OpenMP Flag/$$ was not $code ""$$.
This has been fixed.

$head 02-15$$
A matrix multiply speed test has been added.
So far, this has only implemented for the
$cref/cppad/cppad_mat_mul.cpp/$$ and $cref/double/double_mat_mul.cpp/$$ cases.
(For the time being this test is not available for the other
speed comparison cases.)

$head 02-09$$
A variable in $code user_atomic.hpp$$ was declare of type $icode Base$$
when it should have been declared of type $code size_t$$.
It caused the $cref/user_atomic/$$ feature to fail with some base types.
This has been fixed.
$pre

$$
The $cref/mat_mul.hpp/$$ example has been improved by 
caching the $latex x$$ variable information and using it during
$cref/reverse Hessian sparsity/user_atomic/rev_hes_sparse/$$ calculations. 
$pre

$$
Some of the $cref/user_atomic/$$ documentation was extended to
include more explanation.

$head 02-06$$
The use can now define complex $cref/atomic/user_atomic/$$ operations
and store them in a CppAD $cref/ADFun/$$ object.
This item has been remove from the
$cref/wish list/WishList/$$.
$pre

$$
The documentation for $cref/RevSparseHes/$$ had a dimension error.
This has been fixed.
$pre

$$
A $cref/faster set operations/
	WishList/Sparsity Patterns/Faster Set Operations/$$
item has been added to the wish list.

$head 02-02$$
The documentation for $cref/ForSparseJac/$$ had some formatting errors.
The errors have been fix and the documentation has been improved.

$head 02-01$$
The $cref/subversion/$$ install instructions were brought up to date.

$head 01-19$$
The directory where the $cref pkgconfig$$ file $code cppad.pc$$ 
is stored has been moved from 
$icode%prefixdir%/lib/pkgconfig/cppad.pc%$$  
to
$icode%prefixdir%/share/pkgconfig/cppad.pc%$$;
see
$href%http://lists.fedoraproject.org/pipermail/devel/2011-January/147915.html%
devel@lists.fedoraproject.org%$$.

$head 01-16$$
The following have been fixed:
$list number$$
The install of the documentation failed
when it was done from a directory other than the top source directory.
$lnext
The GPL distribution had the output of the 
$cref/configure/InstallUnix/Configure/$$ command in it.
$lnext
Since the change on 01-09, the file 
$code omh/whats_new_11.omh$$ has been required to build the 
documentation (and it has been missing from the distribution).
$lnext
Fadbad was generating warnings due to the $code -Wshadow$$ flag
with the $code g++$$ compiler.
The Fadbad $cref/speed/speed_fadbad/$$ tests have a special
flag with this warning removed from the
$cref/compiler flags/InstallUnix/CompilerFlags/$$.
$lend

$head 01-09$$
There were some problems running $code make test$$ in the releases
$codei%
http://www.coin-or.org/download/source/CppAD/cppad-20110101.0.%license%.tgz
%$$
where $icode license$$ is $code gpl$$ or $code cpl$$.
$list number$$
The version of automake used to build the corresponding
$code makefile.in$$ files did not define $code abs_top_builddir$$.
$lnext
The include file $code cppad_ipopt_nlp.hpp$$ was always installed, even if 
$cref/IpoptDir/InstallUnix/IpoptDir/$$ was not defined on the 
$code configure$$ command line.
$lnext
The speed test library $code libspeed.a$$ was being installed
(it is only intended for testing).
$lend
These problems are fixed in the trunk 
and these fixes will be copied to the corresponding stable and 
release versions; i.e.,
$codei%
http://www.coin-or.org/download/source/CppAD/cppad-20110101.1.%license%.tgz
%$$
will not have this problem.

$end
