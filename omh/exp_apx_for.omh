/* --------------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-07 Bradley M. Bell

CppAD is distributed under multiple licenses. This distribution is under
the terms of the 
                    Common Public License Version 1.0.

A copy of this license is included in the COPYING file of this distribution.
Please visit http://www.coin-or.org/CppAD/ for information on other licenses.
-------------------------------------------------------------------------- */
$begin exp_eps_for$$
$spell
	exp_eps_for
$$

$section exp_eps: First Order Forward Mode$$

$index first, order forward$$
$index order, first forward$$
$index forward, first order$$

$head Mathematical Form$$
Suppose that we use the algorithm $xref/exp_eps.hpp/$$
to compute $latex {\rm exp\_apx} (x, e)$$ 
with $latex x$$ is equal to .5
and $latex e$$ is equal to .2. 
For this case, the 
$cref/exp_eps operation sequence/exp_eps_seq/Operation Sequence/$$
corresponds to the following function and partial derivative:
$latex \[
\begin{array}{rclll}
{\rm exp\_apx} (x, e) & = &   1 + x + x^2 / 2  
	& =   1 + .5 + .25 / 2 
	& =   1.625
\\
\partial_x {\rm exp\_apx} (x, e) & = &   1 + x 
	& =   1 + .5 
	& =   1.5
\end{array}
\] $$
An algorithmic differentiation package
does not operate on the mathematical form 
but rather on a corresponding operation sequence.

$head Trace$$
We consider the case where $cref/exp_eps.hpp/$$ is executed with
$latex x = .5$$ and $latex e = .2$$.
The corresponding 
$cref/operation sequence/exp_eps_seq/Operation Sequence/$$
and 
$cref/zero order/exp_eps_seq/Operation Sequence/Zero Order/$$
forward sweep values
are inputs that are need by a first order sweep.
A first order sweep 
computes the first order partial derivative
of all the dependent variables with respect to one independent variable. 
The $code exp_eps$$ operation sequence depends on $italic e$$,
but for a given the operation sequence,
the values computed do not depend on $italic e$$.
Thus, the partial derivative with respect to $italic e$$,
of any of the variables in the operation sequence,
is zero.

$subhead Parameters$$
We note that the partial derivatives
with respect to $latex x$$ are zero for the following symbols:
$latex \[
	r_0 , s_0 , k_0 , k_1 , k_2 
\] $$

$subhead Index$$
The Index column contains the index in the operation sequence
of the corresponding atomic operation. 
A Forward sweep starts with the first operation 
and ends with the last.

$subhead Operation$$
The Operation column contains the 
mathematical function corresponding to each atomic operation in the sequence.

$subhead Value_0$$
The Value_0 column contains the function value
(zero order forward sweep value)
corresponding to each atomic operation in the sequence.

$subhead Partial$$
The Partial column contains the
mathematical function corresponding to the partial derivative
with respect to $latex x$$ for each operation in the sequence.

$subhead Value_1$$
The Value_1 column contains the partial derivative value
(first order forward sweep value)
corresponding to each atomic operation in the sequence.


$subhead Table$$

$center
$table
$bold Index$$
	$cnext $pre  $$ $cnext $bold Operation$$ 
	$cnext $pre  $$ $cnext $bold Value_0$$
	$cnext $pre  $$ $cnext $bold Partial$$
	$cnext $pre  $$ $cnext $bold Value_1$$
$rnext
1
	$cnext $pre  $$ $cnext $latex a_0 = x $$
	$cnext $cnext = 0.5
	$cnext $cnext 
	$latex \partial_x a_0 = \partial_x x  $$
	$cnext $cnext = 1
$rnext
2
	$cnext $pre  $$ $cnext $latex q_1  = r_0 * a_0  $$
	$cnext $cnext = 0.5
	$cnext $cnext 
	$latex \partial_x q_1 = \partial_x r_0  * a_0 + r_0 * \partial_x a_0$$
	$cnext $cnext = 1
$rnext
3
	$cnext $pre  $$ $cnext $latex r_1  = q_1 / k_0  $$
	$cnext $cnext = 0.5
	$cnext $cnext 
	$latex \partial_x r_1 = \partial_x q_1 / k_0 $$
	$cnext $cnext = 1
$rnext
4
	$cnext $pre  $$ $cnext $latex s_1  = s_0 + r_1  $$
	$cnext $cnext = 1.5
	$cnext $cnext 
	$latex \partial_x s_1 = \partial_x s_0 + \partial_x r_1 $$
	$cnext $cnext = 1
$rnext
5	$cnext $pre $$  $cnext $latex k_1 = k_0 + 1$$
	$cnext $cnext = 2
	$cnext $cnext
	$latex \partial_x k_1 = \partial_x k_0 $$
	$cnext $cnext = 0
$rnext
6
	$cnext $pre  $$ $cnext $latex q_2 =  r_1 * a_0 $$
	$cnext $cnext = 0.25
	$cnext $cnext 
	$latex \partial_x q_2 = \partial_x r_1  * a_0 + r_1 * \partial_x a_0 $$
	$cnext $cnext = 1
$rnext
7
	$cnext $pre  $$ $cnext $latex r_2 = q_2 / k_1 $$
	$cnext $cnext = 0.125
	$cnext $cnext 
	$latex \partial_x r_2 = \partial_x q_2 / k_1 $$
	$cnext $cnext = 0.5
$rnext
8
	$cnext $pre  $$ $cnext $latex s_2   = s_1 + r_2 $$
	$cnext $cnext = 1.625
	$cnext $cnext 
	$latex  \partial_x s_2 = \partial_x s_1 + \partial_x r_2 $$
	$cnext $cnext = 1.5
$rnext
9	$cnext $pre $$  $cnext $latex k_2 = k_1 + 1$$
	$cnext $cnext = 3
	$cnext $cnext
	$latex \partial_x k_2 = \partial_x k_1 $$
	$cnext $cnext = 0
$tend
$$
Thus forward mode returns
1.5 as the derivative of the return value $latex s_2$$ 
for this case.


$children%
	introduction/exp_apx/exp_eps_for.cpp
%$$
$head Verification$$
The file $xref/exp_eps_for.cpp/$$ contains a routine 
which verifies the values computed above.
It returns true for success and false for failure.

$head Exercises$$
$list number$$
Suppose that $latex x = .1$$,
what are the results of a zero and first order forward mode sweep for 
the operation sequence above; 
i.e., what are the corresponding values for
$latex \[
\begin{array}{c}
	r_0, s_0, k_0, a_0, q_1, r_1, s_1, k_1, q_2, r_2, s_2
	\\
	\partial_x r_0, 
	\partial_x s_0, 
	\partial_x k_0, 
	\partial_x a_0, 
	\partial_x q_1, 
	\partial_x r_1, 
	\partial_x s_1, 
	\partial_x k_1, 
	\partial_x q_2, 
	\partial_x r_2, 
	\partial_x s_2
\end{array}
\]$$
$lnext
Create a modified version of $cref/exp_eps_for.cpp/$$ that verifies 
the derivative values from the previous exercise.
Also create and run a main program that reports the result
of calling the modified version of
$cref/exp_eps_for.cpp/$$.
$lnext
Suppose that $latex x = .1$$ and $latex e = .2$$,
what is the operation sequence corresponding to 
$syntax%
	exp_eps(%x%, %e%)
%$$
$lend

$end
