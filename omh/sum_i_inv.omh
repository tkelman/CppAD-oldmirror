/* $Id$ */
/* --------------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-11 Bradley M. Bell

CppAD is distributed under multiple licenses. This distribution is under
the terms of the 
                    Common Public License Version 1.0.

A copy of this license is included in the COPYING file of this distribution.
Please visit http://www.coin-or.org/CppAD/ for information on other licenses.
-------------------------------------------------------------------------- */

$begin sum_i_inv$$
$spell
	inv
	bool
	num
$$

$index sum_i_inv, specification$$
$index threading, sum_i_inv specification$$

$section Specifications for Summation of 1/i Routine$$

$head Syntax$$
$icode%ok% = sum_i_inv(%sum%, %num_sum%, %num_threads%)%$$

$head Summation$$
Multi-threaded computation of the sum
$latex \[
	s = 1 + 1/2 + 1/3 + ... + 1/n
\] $$

$head ok$$
This return value has prototype
$codei%
	bool %ok%
%$$
If this return value is false, an error occurred during $code sum_i_inv$$.

$head sum$$
This argument has prototype
$codei%
	double& %sum%
%$$
The input value of the argument does not matter.
Upon return it is the value of the summation; i.e. $latex s$$.

$head num_sum$$
This argument has prototype
$codei%
	size_t %num_sum%
%$$
It specifies the number of terms in the summation; i.e. $latex n$$.

$head num_threads$$
This argument has prototype
$codei%
	size_t %num_threads%
%$$
It specifies the number of threads that are available for this test.
If it is zero, the test is run without a multi-threading environment.

$head Source$$
The source code, special for each specific multi-threading system, 
can be found in the files:
$table
$rref openmp_sum_i_inv.cpp$$
$tend

$childtable%
     multi_thread/sum_i_inv_time.cpp%
     multi_thread/sum_i_inv_work.cpp
%$$

$end
