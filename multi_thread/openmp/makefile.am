# $Id$
# -----------------------------------------------------------------------------
# CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-11 Bradley M. Bell
#
# CppAD is distributed under multiple licenses. This distribution is under
# the terms of the 
#                     Common Public License Version 1.0.
#
# A copy of this license is included in the COPYING file of this distribution.
# Please visit http://www.coin-or.org/CppAD/ for information on other licenses.
# -----------------------------------------------------------------------------
# automake input file
#
# CppAD puts all it's preprocessor definitions in the cppad/configure.hpp
DEFS          =
#
check_PROGRAMS    = openmp 
#
if CppAD_MS_COMPILER
# AM_CXXFLAGS     = -EHsc -g $(CXX_FLAGS) $(OPENMP_FLAGS)
AM_CXXFLAGS       = -EHsc -DNDEBUG -O2 $(CXX_FLAGS) $(OPENMP_FLAGS)
else
# AM_CXXFLAGS     = -g $(CXX_FLAGS) $(OPENMP_FLAGS)
AM_CXXFLAGS       = -DNDEBUG -O2 $(CXX_FLAGS) $(OPENMP_FLAGS)
endif
#
AM_CPPFLAGS       = -I. -I$(top_srcdir) 
#
LDADD             = 
AM_LDFLAGS        = 
#
openmp_SOURCES   = \
	openmp.cpp \
\
	../arc_tan.cpp             ../arc_tan.hpp \
	../multi_newton_time.cpp   ../multi_newton_time.hpp \
	../multi_newton_work.cpp   ../multi_newton_work.hpp \
	../simple_ad.cpp           ../simple_ad.hpp \
	../sum_i_inv_time.cpp      ../sum_i_inv_time.hpp \
	../sum_i_inv_work.cpp      ../sum_i_inv_work.hpp \
\
	openmp_team.cpp            ../thread_team.hpp \
	a11c.cpp \
	multi_newton.cpp \
	sum_i_inv.cpp
	
test.sh: openmp$(EXEEXT) 
	echo "#! /bin/sh -e"      >  test.sh
	echo "./openmp a11c"      >> test.sh
	echo "./openmp simple_ad" >> test.sh
	echo "#"                  >> test.sh
	echo "#           max_threads mega_sum" >> test.sh
	echo "./openmp sum_i_inv    2        1" >> test.sh 
	echo "#"                                   >> test.sh
	echo "#           max_threads num_zero num_sub num_sum use_ad" >> test.sh
	echo "./openmp multi_newton 2       20      30     500   true" >> test.sh 
	chmod +x test.sh

test:: test.sh
	./test.sh
